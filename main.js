(()=>{"use strict";const t={inputSelector:".popup__input",submitButtonSelector:".popup__submit-button",inactiveButtonClass:"popup__submit-button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_visible"},e=class{constructor(t,e){this._form=e,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass}_showInputError(t,e){const s=this._form.querySelector(".".concat(t.id,"-input-error"));t.classList.add(this._inputErrorClass),s.textContent=e,s.classList.add(this._errorClass)}_resetError(t){t.textContent=""}_hideInputError(t){const e=this._form.querySelector(".".concat(t.id,"-input-error"));t.classList.remove(this._inputErrorClass),e.classList.remove(this._errorClass),setTimeout((()=>this._resetError(e)),100)}_isValid(t){t.validity.valid?this._hideInputError(t):this._showInputError(t,t.validationMessage)}_hasInvalidInput(t){return!t.every((t=>t.validity.valid))}_disableButton(){this._buttonEl.classList.add(this._inactiveButtonClass),this._buttonEl.disabled=!0}_enableButton(){this._buttonEl.classList.remove(this._inactiveButtonClass),this._buttonEl.disabled=!1}_toggleButtonState(){this._hasInvalidInput(this._inputEls)?this._disableButton():this._enableButton()}_setEventListeners(){this._inputEls=Array.from(this._form.querySelectorAll(this._inputSelector)),this._buttonEl=this._form.querySelector(this._submitButtonSelector),this._inputEls.forEach((t=>{t.addEventListener("input",(()=>{this._isValid(t),this._toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(t=>{t.preventDefault(),this._disableButton()})),this._setEventListeners()}},s=class{constructor(t){this._popup=document.querySelector(t),this.open=this.open.bind(this),this.close=this.close.bind(this),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popup.classList.add("popup_is-visible"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("popup_is-visible"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(t){"Escape"===t.key&&this.close(this._popup)}setEventListeners(){this._popupCloseButton=this._popup.querySelector(".popup__close"),this._popupCloseButton.addEventListener("click",this.close),document.addEventListener("mousedown",(t=>{t.target.matches(".popup")&&this.close()}))}},i=class extends s{constructor(t,e){super(t),this._form=this._popup.querySelector(".popup__form"),this._handleSubmit=e}_getInputValues(){const t=this._form.querySelectorAll(".popup__input"),e={};return t.forEach((t=>{e[t.name]=t.value})),e}close(){super.close(),this._form.reset()}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(t=>{t.preventDefault(),this._handleSubmit(this._getInputValues())}))}},o=document.querySelector(".page"),n=o.querySelector("#popup-profile"),r=o.querySelector("#popup-add-card"),l=o.querySelector(".profile__edit-button"),a=o.querySelector(".profile__add-button"),u=o.querySelector(".popup__input_type_name"),p=o.querySelector(".popup__input_type_title"),_=t=>{const e=new class{constructor(t,e,s){this._title=t.title,this._link=t.link,this._handleCardClick=s,this._template=e}_getTemplate(){return document.querySelector(this._template).content.querySelector(".card").cloneNode(!0)}_handleLikeButton(){this._likeButton.classList.toggle("card__like_clicked")}_handleTrashButton(){this._cardEl.remove()}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeButton()})),this._trashButton.addEventListener("click",(()=>{this._handleTrashButton()})),this._imageEl.addEventListener("click",(()=>{this._handleCardClick()}))}getView(){return this._cardEl=this._getTemplate(),this._likeButton=this._cardEl.querySelector(".card__like"),this._trashButton=this._cardEl.querySelector(".card__trash"),this._imageEl=this._cardEl.querySelector(".card__image"),this._cardEl.querySelector(".card__title").textContent=this._title,this._imageEl.style.backgroundImage="url(".concat(this._link,")"),this._setEventListeners(),this._cardEl}}(t,"#card-template",(()=>{d.open(t)}));c.addItem(e.getView())},c=new class{constructor(t,e){let{items:s,renderer:i}=t;this._items=s,this._renderer=i,this._container=document.querySelector(e)}renderItems(){this._items.forEach((t=>{this._renderer(t)}))}addItem(t){this._container.prepend(t)}}({items:[{title:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{title:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{title:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{title:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{title:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{title:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}],renderer:_},".elements");c.renderItems();const h=new class{constructor(t){let{userNameSelector:e,titleSelector:s}=t;this._userName=document.querySelector(e),this._title=document.querySelector(s)}getUserInfo(){return{name:this._userName.textContent,title:this._title.textContent}}setUserInfo(t){let{name:e,title:s}=t;this._userName.textContent=e,this._title.textContent=s}}({userNameSelector:".profile__name",titleSelector:".profile__description"}),d=new class extends s{constructor(t){super(t),this._imagePopupImage=this._popup.querySelector(".popup__image"),this._imagePopupCaption=this._popup.querySelector(".popup__caption"),this.open=this.open.bind(this)}open(t){let{link:e,title:s}=t;super.open(),this._imagePopupImage.src=e,this._imagePopupImage.alt=s,this._imagePopupCaption.textContent=s}}(".popup_type_image");d.setEventListeners();const m=new e(t,n),E=new e(t,r);m.enableValidation(),E.enableValidation();const v=new i(".popup_type_edit",(t=>{h.setUserInfo(t),v.close()}));v.setEventListeners(),l.addEventListener("click",(()=>{const{name:t,title:e}=h.getUserInfo();u.value=t,p.value=e,v.open()}));const y=new i(".popup_type_add",(t=>{_(t),y.close()}));y.setEventListeners(),a.addEventListener("click",y.open)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,